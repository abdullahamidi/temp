Checks: "readability-*"

CheckOptions:
  ###### abseil-cleanup-ctad ######
  ###### abseil-duration-addition ######
  ###### abseil-duration-comparison ######
  ###### abseil-duration-conversion-cast ######
  ###### abseil-duration-division ######
  ###### abseil-duration-factory-float ######
  ###### abseil-duration-factory-scale ######
  ###### abseil-duration-subtraction ######
  ###### abseil-duration-unnecessary-conversion ######
  ###### abseil-faster-strsplit-delimiter ######
  ###### abseil-no-internal-dependencies ######
  ###### abseil-no-namespace ######
  ###### abseil-redundant-strcat-calls ######
  ###### abseil-str-cat-append ######
  ###### abseil-string-find-startswith ######
  ###### abseil-string-find-str-contains ######
  ###### abseil-time-comparison ######
  ###### abseil-time-subtraction ######
  ###### abseil-upgrade-duration-conversions ######
  ###### altera-id-dependent-backward-branch ######
  ###### altera-kernel-name-restriction ######
  ###### altera-single-work-item-barrier ######
  ###### altera-struct-pack-align ######
  ###### altera-unroll-loops ######
  ###### android-cloexec-accept ######
  ###### android-cloexec-accept4 ######
  ###### android-cloexec-creat ######
  ###### android-cloexec-dup ######
  ###### android-cloexec-epoll-create ######
  ###### android-cloexec-epoll-create1 ######
  ###### android-cloexec-fopen ######
  ###### android-cloexec-inotify-init ######
  ###### android-cloexec-inotify-init1 ######
  ###### android-cloexec-memfd-create ######
  ###### android-cloexec-open ######
  ###### android-cloexec-pipe ######
  ###### android-cloexec-pipe2 ######
  ###### android-cloexec-socket ######
  ###### android-comparison-in-temp-failure-retry ######
  ###### boost-use-to-string ######
  ###### bugprone-argument-comment ######
  ###### bugprone-assert-side-effect ######
  ###### bugprone-assignment-in-if-condition ######
  ###### bugprone-bad-signal-to-kill-thread ######
  ###### bugprone-bool-pointer-implicit-conversion ######
  ###### bugprone-branch-clone ######
  ###### bugprone-copy-constructor-init ######
  ###### bugprone-dangling-handle ######
  ###### bugprone-dynamic-static-initializers ######
  ###### bugprone-easily-swappable-parameters ######
  ###### bugprone-exception-escape ######
  ###### bugprone-fold-init-type ######
  ###### bugprone-forward-declaration-namespace ######
  ###### bugprone-forwarding-reference-overload ######
  ###### bugprone-implicit-widening-of-multiplication-result ######
  ###### bugprone-inaccurate-erase ######
  ###### bugprone-incorrect-roundings ######
  ###### bugprone-infinite-loop ######
  ###### bugprone-integer-division ######
  ###### bugprone-lambda-function-name ######
  ###### bugprone-macro-parentheses ######
  ###### bugprone-macro-repeated-side-effects ######
  ###### bugprone-misplaced-operator-in-strlen-in-alloc ######
  ###### bugprone-misplaced-pointer-arithmetic-in-alloc ######
  ###### bugprone-misplaced-widening-cast ######
  ###### bugprone-move-forwarding-reference ######
  ###### bugprone-multiple-statement-macro ######
  ###### bugprone-no-escape ######
  ###### bugprone-not-null-terminated-result ######
  ###### bugprone-parent-virtual-call ######
  ###### bugprone-posix-return ######
  ###### bugprone-redundant-branch-condition ######
  ###### bugprone-reserved-identifier ######
  ###### bugprone-shared-ptr-array-mismatch ######
  ###### bugprone-signal-handler ######
  ###### bugprone-signed-char-misuse ######
  ###### bugprone-sizeof-container ######
  ###### bugprone-sizeof-expression ######
  ###### bugprone-spuriously-wake-up-functions ######
  ###### bugprone-standalone-empty ######
  ###### bugprone-string-constructor ######
  ###### bugprone-string-integer-assignment ######
  ###### bugprone-string-literal-with-embedded-nul ######
  ###### bugprone-stringview-nullptr ######
  ###### bugprone-suspicious-enum-usage ######
  ###### bugprone-suspicious-include ######
  ###### bugprone-suspicious-memory-comparison ######
  ###### bugprone-suspicious-memset-usage ######
  ###### bugprone-suspicious-missing-comma ######
  ###### bugprone-suspicious-realloc-usage ######
  ###### bugprone-suspicious-semicolon ######
  ###### bugprone-suspicious-string-compare ######
  ###### bugprone-swapped-arguments ######
  ###### bugprone-terminating-continue ######
  ###### bugprone-throw-keyword-missing ######
  ###### bugprone-too-small-loop-variable ######
  ###### bugprone-unchecked-optional-access ######
  ###### bugprone-undefined-memory-manipulation ######
  ###### bugprone-undelegated-constructor ######
  ###### bugprone-unhandled-exception-at-new ######
  ###### bugprone-unhandled-self-assignment ######
  ###### bugprone-unsafe-functions ######
  ###### bugprone-unused-raii ######
  ###### bugprone-unused-return-value ######
  ###### bugprone-use-after-move ######
  ###### bugprone-virtual-near-miss ######
  ###### cert-dcl21-cpp ######
  ###### cert-dcl50-cpp ######
  ###### cert-dcl58-cpp ######
  ###### cert-env33-c ######
  ###### cert-err33-c ######
  ###### cert-err34-c ######
  ###### cert-err52-cpp ######
  ###### cert-err58-cpp ######
  ###### cert-err60-cpp ######
  ###### cert-flp30-c ######
  ###### cert-mem57-cpp ######
  ###### cert-msc50-cpp ######
  ###### cert-msc51-cpp ######
  ###### cert-oop57-cpp ######
  ###### cert-oop58-cpp ######
  ###### clang-analyzer-core.DynamicTypePropagation ######
  ###### clang-analyzer-core.uninitialized.CapturedBlockVariable ######
  ###### clang-analyzer-cplusplus.InnerPointer ######
  ###### clang-analyzer-nullability.NullableReturnedFromNonnull ######
  ###### clang-analyzer-optin.osx.OSObjectCStyleCast ######
  ###### clang-analyzer-optin.performance.GCDAntipattern ######
  ###### clang-analyzer-optin.performance.Padding ######
  ###### clang-analyzer-optin.portability.UnixAPI ######
  ###### clang-analyzer-osx.MIG ######
  ###### clang-analyzer-osx.NumberObjectConversion ######
  ###### clang-analyzer-osx.OSObjectRetainCount ######
  ###### clang-analyzer-osx.ObjCProperty ######
  ###### clang-analyzer-osx.cocoa.AutoreleaseWrite ######
  ###### clang-analyzer-osx.cocoa.Loops ######
  ###### clang-analyzer-osx.cocoa.MissingSuperCall ######
  ###### clang-analyzer-osx.cocoa.NonNilReturnValue ######
  ###### clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak ######
  ###### clang-analyzer-valist.CopyToSelf ######
  ###### clang-analyzer-valist.Uninitialized ######
  ###### clang-analyzer-valist.Unterminated ######
  ###### concurrency-mt-unsafe ######
  ###### concurrency-thread-canceltype-asynchronous ######
  ###### cppcoreguidelines-avoid-capture-default-when-capturing-this ######
  ###### cppcoreguidelines-avoid-const-or-ref-data-members ######
  ###### cppcoreguidelines-avoid-do-while ######
  ###### cppcoreguidelines-avoid-goto ######
  ###### cppcoreguidelines-avoid-non-const-global-variables ######
  ###### cppcoreguidelines-avoid-reference-coroutine-parameters ######
  ###### cppcoreguidelines-init-variables ######
  ###### cppcoreguidelines-interfaces-global-init ######
  ###### cppcoreguidelines-macro-usage ######
  ###### cppcoreguidelines-narrowing-conversions ######
  ###### cppcoreguidelines-no-malloc ######
  ###### cppcoreguidelines-owning-memory ######
  ###### cppcoreguidelines-prefer-member-initializer ######
  ###### cppcoreguidelines-pro-bounds-array-to-pointer-decay ######
  ###### cppcoreguidelines-pro-bounds-constant-array-index ######
  ###### cppcoreguidelines-pro-bounds-pointer-arithmetic ######
  ###### cppcoreguidelines-pro-type-const-cast ######
  ###### cppcoreguidelines-pro-type-cstyle-cast ######
  ###### cppcoreguidelines-pro-type-member-init ######
  ###### cppcoreguidelines-pro-type-reinterpret-cast ######
  ###### cppcoreguidelines-pro-type-static-cast-downcast ######
  ###### cppcoreguidelines-pro-type-union-access ######
  ###### cppcoreguidelines-pro-type-vararg ######
  ###### cppcoreguidelines-slicing ######
  ###### cppcoreguidelines-special-member-functions ######
  ###### cppcoreguidelines-virtual-class-destructor ######
  ###### darwin-avoid-spinlock ######
  ###### darwin-dispatch-once-nonstatic ######
  ###### fuchsia-default-arguments-calls ######
  ###### fuchsia-default-arguments-declarations ######
  ###### fuchsia-multiple-inheritance ######
  ###### fuchsia-overloaded-operator ######
  ###### fuchsia-statically-constructed-objects ######
  ###### fuchsia-trailing-return ######
  ###### fuchsia-virtual-inheritance ######
  ###### google-build-explicit-make-pair ######
  ###### google-build-namespaces ######
  ###### google-build-using-namespace ######
  ###### google-default-arguments ######
  ###### google-explicit-constructor ######
  ###### google-global-names-in-headers ######
  ###### google-objc-avoid-nsobject-new ######
  ###### google-objc-avoid-throwing-exception ######
  ###### google-objc-function-naming ######
  ###### google-objc-global-variable-declaration ######
  ###### google-readability-avoid-underscore-in-googletest-name ######
  ###### google-readability-casting ######
  ###### google-readability-todo ######
  ###### google-runtime-int ######
  ###### google-runtime-operator ######
  ###### google-upgrade-googletest-case ######
  ###### hicpp-avoid-goto ######
  ###### hicpp-exception-baseclass ######
  ###### hicpp-multiway-paths-covered ######
  ###### hicpp-no-assembler ######
  ###### hicpp-signed-bitwise ######
  ###### linuxkernel-must-use-errs ######
  ###### llvm-header-guard ######
  ###### llvm-include-order ######
  ###### llvm-namespace-comment ######
  ###### llvm-prefer-isa-or-dyn-cast-in-conditionals ######
  ###### llvm-prefer-register-over-unsigned ######
  ###### llvm-twine-local ######
  ###### llvmlibc-callee-namespace ######
  ###### llvmlibc-implementation-in-namespace ######
  ###### llvmlibc-inline-function-decl ######
  ###### llvmlibc-restrict-system-libc-headers ######
  ###### misc-confusable-identifiers ######
  ###### misc-const-correctness ######
  ###### misc-definitions-in-headers ######
  ###### misc-misleading-bidirectional ######
  ###### misc-misleading-identifier ######
  ###### misc-misplaced-const ######
  ###### misc-new-delete-overloads ######
  ###### misc-no-recursion ######
  ###### misc-non-copyable-objects ######
  ###### misc-non-private-member-variables-in-classes ######
  ###### misc-redundant-expression ######
  ###### misc-static-assert ######
  ###### misc-throw-by-value-catch-by-reference ######
  ###### misc-unconventional-assign-operator ######
  ###### misc-uniqueptr-reset-release ######
  ###### misc-unused-alias-decls ######
  ###### misc-unused-parameters ######
  ###### misc-unused-using-decls ######
  ###### misc-use-anonymous-namespace ######
  ###### modernize-avoid-bind ######
  ###### modernize-avoid-c-arrays ######
  ###### modernize-concat-nested-namespaces ######
  ###### modernize-deprecated-headers ######
  ###### modernize-deprecated-ios-base-aliases ######
  ###### modernize-loop-convert ######
  ###### modernize-macro-to-enum ######
  ###### modernize-make-shared ######
  ###### modernize-make-unique ######
  ###### modernize-pass-by-value ######
  ###### modernize-raw-string-literal ######
  ###### modernize-redundant-void-arg ######
  ###### modernize-replace-auto-ptr ######
  ###### modernize-replace-disallow-copy-and-assign-macro ######
  ###### modernize-replace-random-shuffle ######
  ###### modernize-return-braced-init-list ######
  ###### modernize-shrink-to-fit ######
  ###### modernize-unary-static-assert ######
  ###### modernize-use-auto ######
  ###### modernize-use-bool-literals ######

  ###### modernize-use-default-member-init ######
  # If this option is set to true (default is false), the check will initialize members with an assignment.
  - key: modernize-use-default-member-init.UseAssignment
    value: 1
  # If this option is set to true (default is true), the check will not warn about members declared inside macros.
  - key: modernize-use-default-member-init.IgnoreMacros
    value: 1

  ###### modernize-use-emplace ######
  ###### modernize-use-equals-default ######
  ###### modernize-use-equals-delete ######
  ###### modernize-use-nodiscard ######
  ###### modernize-use-noexcept ######
  ###### modernize-use-nullptr ######
  ###### modernize-use-override ######
  ###### modernize-use-trailing-return-type ######
  ###### modernize-use-transparent-functors ######
  ###### modernize-use-uncaught-exceptions ######
  ###### modernize-use-using ######
  ###### mpi-buffer-deref ######
  ###### mpi-type-mismatch ######
  ###### objc-assert-equals ######
  ###### objc-avoid-nserror-init ######
  ###### objc-dealloc-in-category ######
  ###### objc-forbidden-subclassing ######
  ###### objc-missing-hash ######
  ###### objc-nsdate-formatter ######
  ###### objc-nsinvocation-argument-lifetime ######
  ###### objc-property-declaration ######
  ###### objc-super-self ######
  ###### openmp-exception-escape ######
  ###### openmp-use-default-none ######
  ###### performance-faster-string-find ######
  ###### performance-for-range-copy ######
  ###### performance-implicit-conversion-in-loop ######
  ###### performance-inefficient-algorithm ######
  ###### performance-inefficient-string-concatenation ######
  ###### performance-inefficient-vector-operation ######
  ###### performance-move-const-arg ######
  ###### performance-move-constructor-init ######
  ###### performance-no-automatic-move ######
  ###### performance-no-int-to-ptr ######
  ###### performance-noexcept-move-constructor ######
  ###### performance-trivially-destructible ######
  ###### performance-type-promotion-in-math-fn ######
  ###### performance-unnecessary-copy-initialization ######
  ###### performance-unnecessary-value-param ######
  ###### portability-restrict-system-includes ######
  ###### portability-simd-intrinsics ######
  ###### portability-std-allocator-const ######
  ###### readability-avoid-const-params-in-decls ######
  ###### readability-braces-around-statements ######
  ###### readability-const-return-type ######
  ###### readability-container-contains ######
  ###### readability-container-data-pointer ######
  ###### readability-container-size-empty ######
  ###### readability-convert-member-functions-to-static ######
  ###### readability-delete-null-pointer ######
  ###### readability-duplicate-include ######
  ###### readability-else-after-return ######
  ###### readability-function-cognitive-complexity ######

  ###### readability-function-size ######
  - key: readability-function-size.LineThreshold
    value: -1
  - key: readability-function-size.StatementThreshold
    value: 800
  - key: readability-function-size.BranchThreshold
    value: -1
  - key: readability-function-size.ParameterThreshold
    value: -1
  - key: readability-function-size.NestingThreshold
    value: -1
  - key: readability-function-size.VariableThreshold
    value: -1

  ###### readability-identifier-length ######
  - key: readability-identifier-length.MinimumVariableNameLength
    value: 2
  #- key: readability-identifier-length.IgnoredVariableNames
  #  value:
  - key: readability-identifier-length.MinimumParameterNameLength
    value: 2
  - key: readability-identifier-length.IgnoredParameterNames
    value: ^[xyzuvwabcdpqn_]$
  - key: readability-identifier-length.MinimumLoopCounterNameLength
    value: 2
  - key: readability-identifier-length.IgnoredLoopCounterNames
    value: ^[ijk_]$
  - key: readability-identifier-length.MinimumExceptionNameLength
    value: 2
  - key: readability-identifier-length.IgnoredExceptionVariableNames
    value: ^[e]$

  ###### readability-identifier-naming ######
  # Abstract class naming
  #- key: readability-identifier-naming.AbstractClassCase
  #  value:
  #- key: readability-identifier-naming.AbstractClassPrefix
  #  value:
  #- key: readability-identifier-naming.AbstractClassSuffix
  #  value:
  #- key: readability-identifier-naming.AbstractClassIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.AbstractClassHungarianPrefix
  #  value:

  # AggressiveDependentMemberLookup
  - key: readability-identifier-naming.AggressiveDependentMemberLookup
    value: false

  # Class naming
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  #- key: readability-identifier-naming.ClassPrefix
  #  value:
  #- key: readability-identifier-naming.ClassSuffix
  #  value:
  #- key: readability-identifier-naming.ClassIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ClassHungarianPrefix

  # Class constant naming
  #- key: readability-identifier-naming.ClassConstantCase
  #  value: lower_case
  #- key: readability-identifier-naming.ClassConstantPrefix
  #  value: _
  #- key: readability-identifier-naming.ClassConstantSuffix
  #  value:
  #- key: readability-identifier-naming.ClassConstantIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ClassConstantHungarianPrefix
  #  value:

  # Class member naming
  #- key: readability-identifier-naming.ClassMemberCase
  #  value: lower_case
  #- key: readability-identifier-naming.ClassMemberPrefix
  #  value: _
  #- key: readability-identifier-naming.ClassMemberSuffix
  #  value:
  #- key: readability-identifier-naming.ClassMemberIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ClassMemberHungarianPrefix
  #  value:

  # Class method naming
  #- key: readability-identifier-naming.ClassMethodCase
  #  value:
  #- key: readability-identifier-naming.ClassMethodPrefix
  #  value:
  #- key: readability-identifier-naming.ClassMethodSuffix
  #  value:
  #- key: readability-identifier-naming.ClassMethodIgnoredRegexp
  #  value:

  # Constant naming
  - key: readability-identifier-naming.ConstantCase
    value: lower_case
  #- key: readability-identifier-naming.ConstantPrefix
  #  value:
  #- key: readability-identifier-naming.ConstantSuffix
  #  value:
  #- key: readability-identifier-naming.ConstantIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ConstantHungarianPrefix
  #  value:

  # Constant member naming
  - key: readability-identifier-naming.ConstantMemberCase
    value: lower_case
  - key: readability-identifier-naming.ConstantMemberPrefix
    value: _
  #- key: readability-identifier-naming.ConstantMemberSuffix
  #  value:
  #- key: readability-identifier-naming.ConstantMemberIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ConstantMemberHungarianPrefix
  #  value:

  # Constant parameter naming
  - key: readability-identifier-naming.ConstantParameterCase
    value: lower_case
  #- key: readability-identifier-naming.ConstantParameterPrefix
  #  value:
  #- key: readability-identifier-naming.ConstantParameterSuffix
  #  value:
  - key: readability-identifier-naming.ConstantParameterIgnoredRegexp
    value: ^[xyzabcd]$
  #- key: readability-identifier-naming.ConstantParameterHungarianPrefix
  #  value:

  # Constant pointer naming
  #- key: readability-identifier-naming.ConstantPointerParameterCase
  #  value:
  #- key: readability-identifier-naming.ConstantPointerParameterPrefix
  #  value:
  #- key: readability-identifier-naming.ConstantPointerParameterSuffix
  #  value:
  #- key: readability-identifier-naming.ConstantPointerParameterIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ConstantPointerParameterHungarianPrefix
  #  value:

  # constexpr function naming
  #- key: readability-identifier-naming.ConstexprFunctionCase
  #  value:
  #- key: readability-identifier-naming.ConstexprFunctionPrefix
  #  value:
  #- key: readability-identifier-naming.ConstexprFunctionSuffix
  #  value:
  - key: readability-identifier-naming.ConstexprFunctionIgnoredRegexp
    value: ^_*$

  # constexpr method naming
  #- key: readability-identifier-naming.ConstexprMethodCase
  #  value:
  #- key: readability-identifier-naming.ConstexprMethodPrefix
  #  value:
  #- key: readability-identifier-naming.ConstexprMethodSuffix
  #  value:
  #- key: readability-identifier-naming.ConstexprMethodIgnoredRegexp
  #  value:

  # constexpr variable naming
  #- key: readability-identifier-naming.ConstexprVariableCase
  #  value:
  #- key: readability-identifier-naming.ConstexprVariablePrefix
  #  value:
  #- key: readability-identifier-naming.ConstexprVariableSuffix
  #  value:
  #- key: readability-identifier-naming.ConstexprVariableIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ConstexprVariableHungarianPrefix
  #  value:

  # enum naming
  - key: readability-identifier-naming.EnumCase
    value: UPPER_CASE
  #- key: readability-identifier-naming.EnumPrefix
  #  value: E_
  #- key: readability-identifier-naming.EnumSuffix
  #  value:
  #- key: readability-identifier-naming.EnumIgnoredRegexp
  #  value:

  # enum constant naming
  #- key: readability-identifier-naming.EnumConstantCase
  #  value:
  #- key: readability-identifier-naming.EnumConstantPrefix
  #  value:
  #- key: readability-identifier-naming.EnumConstantSuffix
  #  value:
  #- key: readability-identifier-naming.EnumConstantIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.EnumConstantHungarianPrefix
  #  value:

  # function naming
  - key: readability-identifier-naming.FunctionCase
    value: lower_case
  #- key: readability-identifier-naming.FunctionPrefix
  #  value:
  #- key: readability-identifier-naming.FunctionSuffix
  #  value:
  #- key: readability-identifier-naming.FunctionIgnoredRegexp
  #  value:

  # When true the check will look for the configuration for where an identifier is declared. Useful for when included header files use a different style. Default value is true.
  #- key: readability-identifier-naming.GetConfigPerFile
  #  value:

  # Global constant naming
  #- key: readability-identifier-naming.GlobalConstantCase
  #  value:
  #- key: readability-identifier-naming.GlobalConstantPrefix
  #  value:
  #- key: readability-identifier-naming.GlobalConstantSuffix
  #  value:
  #- key: readability-identifier-naming.GlobalConstantIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.GlobalConstantHungarianPrefix
  #  value:

  # Global constant pointer naming
  #- key: readability-identifier-naming.GlobalConstantPointerCase
  #  value:
  #- key: readability-identifier-naming.GlobalConstantPointerPrefix
  #  value:
  #- key: readability-identifier-naming.GlobalConstantPointerSuffix
  #  value:
  #- key: readability-identifier-naming.GlobalConstantPointerIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.GlobalConstantPointerHungarianPrefix
  #  value:

  # Global function naming
  #- key: readability-identifier-naming.GlobalFunctionCase
  #  value:
  #- key: readability-identifier-naming.GlobalFunctionPrefix
  #  value:
  #- key: readability-identifier-naming.GlobalFunctionSuffix
  #  value:
  #- key: readability-identifier-naming.GlobalFunctionIgnoredRegexp
  #  value:

  # Global pointer naming
  #- key: readability-identifier-naming.GlobalPointerCase
  #  value:
  #- key: readability-identifier-naming.GlobalPointerPrefix
  #  value:
  #- key: readability-identifier-naming.GlobalPointerSuffix
  #  value:
  #- key: readability-identifier-naming.GlobalPointerIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.GlobalPointerHungarianPrefix

  # Global variable naming
  #- key: readability-identifier-naming.GlobalVariableCase
  #  value:
  #- key: readability-identifier-naming.GlobalVariablePrefix
  #  value:
  #- key: readability-identifier-naming.GlobalVariableSuffix
  #  value:
  #- key: readability-identifier-naming.GlobalVariableIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.GlobalVariableHungarianPrefix
  #  value:

  # When set to true functions that have a similar signature to main or wmain won’t enforce checks on the names of their parameters. Default value is false.
  - key: readability-identifier-naming.IgnoreMainLikeFunctions
    value: 1

  # inline namespace naming
  #- key: readability-identifier-naming.InlineNamespaceCase
  #  value:
  #- key: readability-identifier-naming.InlineNamespacePrefix
  #  value:
  #- key: readability-identifier-naming.InlineNamespaceSuffix
  #  value:
  #- key: readability-identifier-naming.InlineNamespaceIgnoredRegexp
  #  value:

  # local constant naming
  #- key: readability-identifier-naming.LocalConstantCase
  #  value:
  #- key: readability-identifier-naming.LocalConstantPrefix
  #  value:
  #- key: readability-identifier-naming.LocalConstantSuffix
  #  value:
  #- key: readability-identifier-naming.LocalConstantIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.LocalConstantHungarianPrefix
  #  value:

  # local constant pointer naming
  #- key: readability-identifier-naming.LocalConstantPointerCase
  #  value:
  #- key: readability-identifier-naming.LocalConstantPointerPrefix
  #  value:
  #- key: readability-identifier-naming.LocalConstantPointerSuffix
  #  value:
  #- key: readability-identifier-naming.LocalConstantPointerIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.LocalConstantPointerHungarianPrefix
  #  value:

  # local pointer naming
  #- key: readability-identifier-naming.LocalPointerCase
  #  value:
  #- key: readability-identifier-naming.LocalPointerPrefix
  #  value:
  #- key: readability-identifier-naming.LocalPointerSuffix
  #  value:
  #- key: readability-identifier-naming.LocalPointerIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.LocalPointerHungarianPrefix
  #  value:

  # local variable naming
  #- key: readability-identifier-naming.LocalVariableCase
  #  value:
  #- key: readability-identifier-naming.LocalVariablePrefix
  #  value:
  #- key: readability-identifier-naming.LocalVariableSuffix
  #  value:
  #- key: readability-identifier-naming.LocalVariableIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.LocalVariableHungarianPrefix
  #  value:

  # Macro naming
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
  #- key: readability-identifier-naming.MacroDefinitionPrefix
  #  value:
  #- key: readability-identifier-naming.MacroDefinitionSuffix
  #  value:
  #- key: readability-identifier-naming.MacroDefinitionIgnoredRegexp
  #  value:

  # Member naming
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  # - key: readability-identifier-naming.MemberPrefix
  #   value:
  #- key: readability-identifier-naming.MemberSuffix
  #  value:
  #- key: readability-identifier-naming.MemberIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.MemberHungarianPrefix
  #  value:

  # Method naming
  #- key: readability-identifier-naming.MethodCase
  #  value:
  #- key: readability-identifier-naming.MethodPrefix
  #  value:
  #- key: readability-identifier-naming.MethodSuffix
  #  value:
  #- key: readability-identifier-naming.MethodIgnoredRegexp
  #  value:

  # Namespace naming
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  #- key: readability-identifier-naming.NamespacePrefix
  #  value:
  #- key: readability-identifier-naming.NamespaceSuffix
  #  value:
  - key: readability-identifier-naming.NamespaceIgnoredRegexp
    value: MUPHSO

  # Parameter naming
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  #- key: readability-identifier-naming.ParameterPrefix
  #  value:
  #- key: readability-identifier-naming.ParameterSuffix
  #  value:
  #- key: readability-identifier-naming.ParameterIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ParameterHungarianPrefix
  #  value:

  # Parameter pack naming
  - key: readability-identifier-naming.ParameterPackCase
    value: lower_case
  #- key: readability-identifier-naming.ParameterPackPrefix
  #  value:
  #- key: readability-identifier-naming.ParameterPackSuffix
  #  value:
  #- key: readability-identifier-naming.ParameterPackIgnoredRegexp
  #  value:

  # Pointer parameter naming
  - key: readability-identifier-naming.PointerParameterCase
    value: lower_case
  #- key: readability-identifier-naming.PointerParameterPrefix
  #  value:
  #- key: readability-identifier-naming.PointerParameterSuffix
  #  value:
  #- key: readability-identifier-naming.PointerParameterIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.PointerParameterHungarianPrefix
  #  value:

  # Private member naming
  - key: readability-identifier-naming.PrivateMemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberPrefix
    value: _
  #- key: readability-identifier-naming.PrivateMemberSuffix
  #  value:
  #- key: readability-identifier-naming.PrivateMemberIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.PrivateMemberHungarianPrefix

  # Private method naming
  #- key: readability-identifier-naming.PrivateMethodCase
  #  value:
  #- key: readability-identifier-naming.PrivateMethodPrefix
  #  value:
  #- key: readability-identifier-naming.PrivateMethodSuffix
  #  value:
  #- key: readability-identifier-naming.PrivateMethodIgnoredRegexp
  #  value:

  # Protected member naming
  #- key: readability-identifier-naming.ProtectedMemberCase
  #  value:
  #- key: readability-identifier-naming.ProtectedMemberPrefix
  #  value:
  #- key: readability-identifier-naming.ProtectedMemberSuffix
  #  value:
  #- key: readability-identifier-naming.ProtectedMemberIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.ProtectedMemberHungarianPrefix
  #  value:

  # Protected method naming
  #- key: readability-identifier-naming.ProtectedMethodCase
  #  value:
  #- key: readability-identifier-naming.ProtectedMethodPrefix
  #  value:
  #- key: readability-identifier-naming.ProtectedMethodSuffix
  #  value:
  #- key: readability-identifier-naming.ProtectedMethodIgnoredRegexp
  #  value:

  # Public member naming
  #- key: readability-identifier-naming.PublicMemberCase
  #  value:
  #- key: readability-identifier-naming.PublicMemberPrefix
  #  value:
  #- key: readability-identifier-naming.PublicMemberSuffix
  #  value:
  #- key: readability-identifier-naming.PublicMemberIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.PublicMemberHungarianPrefix
  #  value:

  # Public method naming
  #- key: readability-identifier-naming.PublicMethodCase
  #  value:
  #- key: readability-identifier-naming.PublicMethodPrefix
  #  value:
  #- key: readability-identifier-naming.PublicMethodSuffix
  #  value:
  #- key: readability-identifier-naming.PublicMethodIgnoredRegexp
  #  value:

  # Scoped enum constant naming
  #- key: readability-identifier-naming.ScopedEnumConstantCase
  #  value:
  #- key: readability-identifier-naming.ScopedEnumConstantPrefix
  #  value:
  #- key: readability-identifier-naming.ScopedEnumConstantSuffix
  #  value:
  #- key: readability-identifier-naming.ScopedEnumConstantIgnoredRegexp
  #  value:

  # Static constant naming
  #- key: readability-identifier-naming.StaticConstantCase
  #  value:
  #- key: readability-identifier-naming.StaticConstantPrefix
  #  value:
  #- key: readability-identifier-naming.StaticConstantSuffix
  #  value:
  #- key: readability-identifier-naming.StaticConstantIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.StaticConstantHungarianPrefix
  #  value:

  # Static variable naming
  #- key: readability-identifier-naming.StaticVariableCase
  #  value:
  #- key: readability-identifier-naming.StaticVariablePrefix
  #  value:
  #- key: readability-identifier-naming.StaticVariableSuffix
  #  value:
  #- key: readability-identifier-naming.StaticVariableIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.StaticVariableHungarianPrefix
  #  value:

  # Struct naming
  - key: readability-identifier-naming.StructCase
    value: lower_case
  #- key: readability-identifier-naming.StructPrefix
  #  value:
  #- key: readability-identifier-naming.StructSuffix
  #  value:
  - key: readability-identifier-naming.StructIgnoredRegexp
    value: _\S+

  # Template parameter naming
  - key: readability-identifier-naming.TemplateParameterCase
    value: CamelCase
  #- key: readability-identifier-naming.TemplateParameterPrefix
  #  value:
  #- key: readability-identifier-naming.TemplateParameterSuffix
  #  value:
  #- key: readability-identifier-naming.TemplateParameterIgnoredRegexp
  #  value:

  # Template template parameter naming
  - key: readability-identifier-naming.TemplateTemplateParameterCase
    value: CamelCase
  #- key: readability-identifier-naming.TemplateTemplateParameterPrefix
  #  value:
  #- key: readability-identifier-naming.TemplateTemplateParameterSuffix
  #  value:
  #- key: readability-identifier-naming.TemplateTemplateParameterIgnoredRegexp
  #  value:

  # Type alias naming
  - key: readability-identifier-naming.TypeAliasCase
    value: lower_case
  #- key: readability-identifier-naming.TypeAliasPrefix
  #  value:
  #- key: readability-identifier-naming.TypeAliasSuffix
  #  value:
  #- key: readability-identifier-naming.TypeAliasIgnoredRegexp
  #  value:

  # Typedef naming
  - key: readability-identifier-naming.TypedefCase
    value: lower_case
  #- key: readability-identifier-naming.TypedefPrefix
  #  value:
  #- key: readability-identifier-naming.TypedefSuffix
  #  value:
  #- key: readability-identifier-naming.TypedefIgnoredRegexp
  #  value:

  # Type template parameter naming
  #- key: readability-identifier-naming.TypeTemplateParameterCase
  #  value:
  #- key: readability-identifier-naming.TypeTemplateParameterPrefix
  #  value:
  #- key: readability-identifier-naming.TypeTemplateParameterSuffix
  #  value:
  #- key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp
  #  value:

  # Union naming
  - key: readability-identifier-naming.UnionCase
    value: lower_case
  #- key: readability-identifier-naming.UnionPrefix
  #  value:
  #- key: readability-identifier-naming.UnionSuffix
  #  value:
  #- key: readability-identifier-naming.UnionIgnoredRegexp
  #  value:

  # Value tempplate parameter naming
  #- key: readability-identifier-naming.ValueTemplateParameterCase
  #  value:
  #- key: readability-identifier-naming.ValueTemplateParameterPrefix
  #  value:
  #- key: readability-identifier-naming.ValueTemplateParameterSuffix
  #  value:
  #- key: readability-identifier-naming.ValueTemplateParameterIgnoredRegexp
  #  value:

  # Variable naming
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  #- key: readability-identifier-naming.VariablePrefix
  #  value:
  #- key: readability-identifier-naming.VariableSuffix
  #  value:
  #- key: readability-identifier-naming.VariableIgnoredRegexp
  #  value:
  #- key: readability-identifier-naming.VariableHungarianPrefix
  #  value:

  # virtual method naming
  #- key: readability-identifier-naming.VirtualMethodCase
  #  value:
  #- key: readability-identifier-naming.VirtualMethodPrefix
  #  value:
  #- key: readability-identifier-naming.VirtualMethodSuffix
  #  value:
  #- key: readability-identifier-naming.VirtualMethodIgnoredRegexp
  #  value:

  ###### readability-implicit-bool-conversion ######
  ###### readability-inconsistent-declaration-parameter-name ######
  ###### readability-isolate-declaration ######
  ###### readability-magic-numbers ######
  ###### readability-make-member-function-const ######
  ###### readability-misleading-indentation ######
  ###### readability-misplaced-array-index ######
  ###### readability-named-parameter ######
  ###### readability-non-const-parameter ######
  ###### readability-qualified-auto ######
  ###### readability-redundant-access-specifiers ######
  ###### readability-redundant-control-flow ######
  ###### readability-redundant-declaration ######
  ###### readability-redundant-function-ptr-dereference ######

  ###### readability-redundant-member-init ######
  # When true, the check will ignore unnecessary base class initializations within copy constructors
  - key: readability-redundant-member-init.IgnoreBaseInCopyConstructors
    value: false

  ###### readability-redundant-preprocessor ######
  ###### readability-redundant-smartptr-get ######
  ###### readability-redundant-string-cstr ######
  ###### readability-redundant-string-init ######
  ###### readability-simplify-boolean-expr ######
  ###### readability-simplify-subscript-expr ######
  ###### readability-static-accessed-through-instance ######
  ###### readability-static-definition-in-anonymous-namespace ######
  ###### readability-string-compare ######
  ###### readability-suspicious-call-argument ######
  ###### readability-uniqueptr-delete-release ######
  ###### readability-uppercase-literal-suffix ######
  ###### readability-use-anyofallof ######
